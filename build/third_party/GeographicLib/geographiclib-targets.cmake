# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.24)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS GeographicLib::GeographicLib_SHARED GeographicLib::GeographicLib GeographicLib::CartConvert GeographicLib::ConicProj GeographicLib::GeodesicProj GeographicLib::GeoConvert GeographicLib::GeodSolve GeographicLib::GeoidEval GeographicLib::Gravity GeographicLib::IntersectTool GeographicLib::MagneticField GeographicLib::Planimeter GeographicLib::RhumbSolve GeographicLib::TransverseMercatorProj)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target GeographicLib::GeographicLib_SHARED
add_library(GeographicLib::GeographicLib_SHARED SHARED IMPORTED)

set_target_properties(GeographicLib::GeographicLib_SHARED PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/include;C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/third_party/GeographicLib/include"
)

# Create imported target GeographicLib::GeographicLib
add_library(GeographicLib::GeographicLib INTERFACE IMPORTED)

set_target_properties(GeographicLib::GeographicLib PROPERTIES
  INTERFACE_LINK_LIBRARIES "GeographicLib::GeographicLib_SHARED"
)

# Create imported target GeographicLib::CartConvert
add_executable(GeographicLib::CartConvert IMPORTED)

# Create imported target GeographicLib::ConicProj
add_executable(GeographicLib::ConicProj IMPORTED)

# Create imported target GeographicLib::GeodesicProj
add_executable(GeographicLib::GeodesicProj IMPORTED)

# Create imported target GeographicLib::GeoConvert
add_executable(GeographicLib::GeoConvert IMPORTED)

# Create imported target GeographicLib::GeodSolve
add_executable(GeographicLib::GeodSolve IMPORTED)

# Create imported target GeographicLib::GeoidEval
add_executable(GeographicLib::GeoidEval IMPORTED)

# Create imported target GeographicLib::Gravity
add_executable(GeographicLib::Gravity IMPORTED)

# Create imported target GeographicLib::IntersectTool
add_executable(GeographicLib::IntersectTool IMPORTED)

# Create imported target GeographicLib::MagneticField
add_executable(GeographicLib::MagneticField IMPORTED)

# Create imported target GeographicLib::Planimeter
add_executable(GeographicLib::Planimeter IMPORTED)

# Create imported target GeographicLib::RhumbSolve
add_executable(GeographicLib::RhumbSolve IMPORTED)

# Create imported target GeographicLib::TransverseMercatorProj
add_executable(GeographicLib::TransverseMercatorProj IMPORTED)

# Import target "GeographicLib::GeographicLib_SHARED" for configuration "Debug"
set_property(TARGET GeographicLib::GeographicLib_SHARED APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::GeographicLib_SHARED PROPERTIES
  IMPORTED_IMPLIB_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/lib/libGeographicLib.dll.a"
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/libGeographicLib.dll"
  )

# Import target "GeographicLib::CartConvert" for configuration "Debug"
set_property(TARGET GeographicLib::CartConvert APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::CartConvert PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/CartConvert.exe"
  )

# Import target "GeographicLib::ConicProj" for configuration "Debug"
set_property(TARGET GeographicLib::ConicProj APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::ConicProj PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/ConicProj.exe"
  )

# Import target "GeographicLib::GeodesicProj" for configuration "Debug"
set_property(TARGET GeographicLib::GeodesicProj APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::GeodesicProj PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/GeodesicProj.exe"
  )

# Import target "GeographicLib::GeoConvert" for configuration "Debug"
set_property(TARGET GeographicLib::GeoConvert APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::GeoConvert PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/GeoConvert.exe"
  )

# Import target "GeographicLib::GeodSolve" for configuration "Debug"
set_property(TARGET GeographicLib::GeodSolve APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::GeodSolve PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/GeodSolve.exe"
  )

# Import target "GeographicLib::GeoidEval" for configuration "Debug"
set_property(TARGET GeographicLib::GeoidEval APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::GeoidEval PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/GeoidEval.exe"
  )

# Import target "GeographicLib::Gravity" for configuration "Debug"
set_property(TARGET GeographicLib::Gravity APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::Gravity PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/Gravity.exe"
  )

# Import target "GeographicLib::IntersectTool" for configuration "Debug"
set_property(TARGET GeographicLib::IntersectTool APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::IntersectTool PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/IntersectTool.exe"
  )

# Import target "GeographicLib::MagneticField" for configuration "Debug"
set_property(TARGET GeographicLib::MagneticField APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::MagneticField PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/MagneticField.exe"
  )

# Import target "GeographicLib::Planimeter" for configuration "Debug"
set_property(TARGET GeographicLib::Planimeter APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::Planimeter PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/Planimeter.exe"
  )

# Import target "GeographicLib::RhumbSolve" for configuration "Debug"
set_property(TARGET GeographicLib::RhumbSolve APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::RhumbSolve PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/RhumbSolve.exe"
  )

# Import target "GeographicLib::TransverseMercatorProj" for configuration "Debug"
set_property(TARGET GeographicLib::TransverseMercatorProj APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(GeographicLib::TransverseMercatorProj PROPERTIES
  IMPORTED_LOCATION_DEBUG "C:/Users/HYPERPC/Documents/MATLAB/KPM/C++/Wien_Filter/bal/build/third_party/GeographicLib/bin/TransverseMercatorProj.exe"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
